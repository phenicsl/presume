<?xml version="1.0" encoding="utf-8"?>
<project name="fop resume" default="build" basedir=".">
  <property environment="env"/>

  <property name="fop.home" value="${env.FOP_HOME}"/>

  <property name="dst.path" value="build"/>
  <property name="conf.path" value="conf"/>
  <property name="src.path" value="src"/>
  <property name="font.path" value="${conf.path}/font"/>
  <property name="metrics.path" value="${conf.path}/metrics"/>
  
  <property name="font.name" value=""/>
  <property name="metrics.name" value=""/>
  
  <property name="basename" value="en"/>
  <property name="xml.name" value="${basename}.xml"/>
  <property name="fo.name" value="${basename}.fo"/>
  <property name="pdf.name" value="${basename}.pdf"/>
  <property name="rtf.name" value="${basename}.rtf"/>
  <property name="html.name" value="${basename}.html"/>
  <property name="xsl.fo.name" value="fo.xsl"/>
  <property name="xsl.html.name" value="html.xsl"/>

  <property name="ttcname" value=""/>
  <property name="locale.en.name" value="${src.path}/lang_en.xml"/>
  <property name="locale.zh.name" value="${src.path}/lang_zh.xml"/>

  <property name="locale" value="en"/>

  <property name="resume.home" value="/home/lizh/workspace/presume"/>


  <fileset dir="${fop.home}" id="fop.libs">
    <include name="lib/*.jar"/>
    <include name="build/*.jar"/>
  </fileset>

  <path id="fop.classpath">
    <fileset refid="fop.libs"/>
  </path>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

  <target name="mkdstdir" description="make the build directory">
    <mkdir dir="${dst.path}"/>
  </target>

  <target name="ttf-metrics" description="generate font config files">
    <mkdir dir="${metrics.path}"/>
    <java classname="org.apache.fop.fonts.apps.TTFReader">
      <classpath>
	<path refid="fop.classpath"/>
      </classpath>
      <arg value="${font.path}/${font.name}" />
      <arg value="${metrics.path}/${metrics.name}" />
    </java>
  </target>

  <target name="ttc-metrics" description="generate font config files">
    <mkdir dir="${metrics.path}"/>
    <java classname="org.apache.fop.fonts.apps.TTFReader">
      <classpath>
	<path refid="fop.classpath"/>
      </classpath>
      <arg line="-ttcname '${ttcname}'"/>
      <arg value="${font.path}/${font.name}" />
      <arg value="${metrics.path}/${metrics.name}" />
    </java>
  </target>
  
  <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
    <classpath>
      <path refid="fop.classpath"/>
    </classpath>
  </taskdef>

  <target name="build-locale" description="build the appropriate locale file">
    <!-- delete exist src/lang.xml file -->
    <delete file="${src.path}/lang.xml"/>
    <if>
      <equals arg1="${locale}" arg2="zh"/>
      <then>
	<copy file="${locale.zh.name}" tofile="${src.path}/lang.xml"/>
      </then>
      <else>
	<copy file="${locale.en.name}" tofile="${src.path}/lang.xml"/>
      </else>
    </if>
  </target>

  <target name="xslt_fo" depends="build-locale" description="generate fo with xslt process">
    <java classname="org.apache.xalan.xslt.Process">
      <classpath>
	<path refid="fop.classpath"/>
      </classpath>
      <arg line="-IN ${src.path}/${xml.name} -XSL ${src.path}/${xsl.fo.name} -OUT ${src.path}/${fo.name}"/>
    </java>
  </target>

  <target name="fop" depends="xslt_fo, mkdstdir" description="build the document">
    <fop format="application/pdf"
	 fofile="${src.path}/${fo.name}"
	 outfile="${dst.path}/${pdf.name}"
	 userconfig="conf/fop.xconf">
    </fop>
  </target>

  <target name="rtf" depends="xslt_fo, mkdstdir" description="build the document">
    <fop format="application/rtf"
	 fofile="${src.path}/${fo.name}"
	 outfile="${dst.path}/${rtf.name}"
	 userconfig="conf/fop.xconf">
    </fop>
  </target>

  <target name="html" depends="mkdstdir, build-locale" description="build html version">
    <java classname="org.apache.xalan.xslt.Process">
      <classpath>
	<path refid="fop.classpath"/>
      </classpath>
      <arg line="-IN ${src.path}/${xml.name} -XSL ${src.path}/${xsl.html.name} -OUT ${dst.path}/${html.name}"/>
    </java>
  </target>




  <target name="view" description="view pdf file">
    <exec executable="evince"
	  spawn="true">
      <arg value="${dst.path}/${pdf.name}"/>
    </exec>
  </target>

  <target name="clean" description="clean project">
    <delete dir="build"/>
  </target>
</project>
